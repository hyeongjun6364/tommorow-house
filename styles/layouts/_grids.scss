/*
 * MOBILE < 768px ----------------------------------------------
 * fixture--------------------sm
 * # of columns --------------4
 * gutter --------------------20px
 * margin --------------------5px
 * container-size ------------100%-10px
 */

/*
 * TABLET >= 768px ----------------------------------------------
 * fixture --------------------md
 * # of columns ---------------12
 * gutter  --------------------20px
 * margin ---------------------30px
 * container-size -------------100% - (30px * 2)
 * max-container-size  --------960px
 */

/*
 * DESKTOP >= 1200px ----------------------------------------------
 * fixture --------------------lg
 * # of columns ---------------12
 * unit -----------------------75px
 * gutter  --------------------20px
 * margin ---------------------auto
 * container-size -------------100% - (113px * 2)
 * max-container-size ---------1140px
 */

$gutter: 20px;

$sm-columns: 4;
$sm-margin: 5px;

$md-columns: 12;
$md-margin: 30px;
$md-max-container: 960px + $md-margin * 2;

$lg-columns: 12;
$lg-unit: 75px;
$lg-max-container: ($lg-unit + $gutter) * $lg-columns;

.container {
  width: 100%;
  padding: 0 $sm-margin;
  margin: 0 auto;
  .row {
    display: flex;
    flex-wrap: wrap;
  }
  // .col-sm-1 .col-md-2
  // class속성중에 col-로 시작하는 모든 속성을 가져오는 css 속성임
  [class^='col-'] {
    padding: 0 $gutter/2;
  }
  // 변수 i를 활용해 width값을 프로그래밍함
  @for $i from 1 through $sm-columns {
    .col-sm-#{$i} {
      width: percentage($i/$sm-columns);
    }
  }

  @include responsive(T) {
    max-width: $md-max-container;
    padding: 0 $md-margin;
    @for $i from 1 through $md-columns {
      .col-md-#{$i} {
        width: percentage($i/$md-columns);
      }
    }
  }
  @include responsive(D) {
    max-width: $lg-max-container;
    padding: 0;
    @for $i from 1 through $lg-columns {
      .col-lg-#{$i} {
        width: ($lg-unit + $gutter) * $i;
      }
    }
  }
}
